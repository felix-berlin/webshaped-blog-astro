---
import "@styles/components/_blog-posts.scss";
import DefaultLayout from "@layouts/DefaultLayout.astro";
import BlogPostPreview from "@components/BlogPostPreview.vue";
import Pagination from "@components/Pagination.vue";
import { getAllPostPreviewsByCategory } from "@services/api";
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
  PaginateFunction,
} from "astro";

import type { Category, Post } from "@ts_types/generated/graphql";

interface Paginate {
  paginate: PaginateFunction;
}

export const getStaticPaths = async ({ paginate }: Paginate) => {
  const postPreviews = await getAllPostPreviewsByCategory();

  /**
   * @see https://docs.astro.build/en/core-concepts/routing/#nested-pagination
   */
  return (
    postPreviews &&
    postPreviews.nodes.map((category) => {
      if (!Array.isArray(category?.posts?.nodes)) return null;

      return paginate(category?.posts?.nodes as Node[] & Post[], {
        props: {
          content: {
            title: category.name,
            language: category.language,
          },
        },
        params: {
          slug: category.slug as string,
        },
        pageSize: 1,
      });
    })
  );
};

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page, content } = Astro.props as Props;
const params = Astro.params as Params;

const path = `/category/${params["slug"]}`;

const posts = {
  nodes: page["data"],
};
---

<DefaultLayout content={content}>
  <section class="o-content__headline">
    <h1>{content["title"]}</h1>
  </section>
  <section class="c-blog-posts">
    <BlogPostPreview posts={posts} client:visible />
  </section>
  <Pagination page={page} path={path} lang={content["language"]} />
</DefaultLayout>

---
import "@styles/components/_blog-posts.scss";
import DefaultLayout from "@layouts/DefaultLayout.astro";
import BlogPostPreview from "@components/BlogPostPreview.vue";
import Pagination from "@components/Pagination.vue";
import { getAllPostPreviewsByCategory } from "@lib/api";

import type { RootQuery } from "../../../types/generated/graphql";

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const postPreviews = await getAllPostPreviewsByCategory();

  /**
   * @see https://docs.astro.build/en/core-concepts/routing/#nested-pagination
   */
  return (
    postPreviews &&
    postPreviews.nodes.map((category: { slug? }) => {
      return paginate((category as RootQuery["category"])?.posts?.nodes, {
        props: {
          content: {
            title: category.name,
            language: category.language,
          },
        },
        params: {
          slug: category.slug,
        },
        pageSize: 1,
      });
    })
  );
}

const { page, content } = Astro.props;
const params = Astro.params;

const path = `/category/${params.slug}`;

const posts = {
  nodes: page.data,
};
---

<DefaultLayout content={content}>
  <section class="o-content__headline">
    <h1>{content.title}</h1>
  </section>
  <section class="c-blog-posts">
    <BlogPostPreview posts={posts} client:visible />
  </section>
  <Pagination page={page} path={path} lang={content.language} />
</DefaultLayout>

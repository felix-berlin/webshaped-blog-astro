---
// import BlogPostVue from '@layouts/BlogPost.vue'
import BlogPost from '@layouts/BlogPost.astro';

import { getAllPostsWithSlugs, getPostBySlug } from '@lib/api';

export async function getStaticPaths() {
  const postWithSlugs: any = await getAllPostsWithSlugs();

  return postWithSlugs.edges.map(({ node }: any) => {
    interface Posts {
      slug: string;
      language: {
        slug: string;
      }
    }

    let posts: Posts = {};

    if (node.translations.length) {
      posts = {...node.translations[0]};
    }
    delete node.translations;
    posts = {...node, ...posts};

    return {
      params: {
        postSlug: posts.slug,
        lang: posts.language.slug
      },
    };
  });
}

const { postSlug, lang }: any = Astro.params;
const post: any = await getPostBySlug(postSlug);

// console.log(post, lang);

---

<BlogPost content={post}>
  <div class="wrapper">
    <article set:html={post.content} class="o-article"></article>
  </div>
</BlogPost>

<!-- <BlogPostVue  client:visible
              title={post.title}
              description={post.excerpt}
              publishDate={post.dateGmt}
              heroImage={passProps.heroImage}>
  <div class="wrapper">
    <article set:html={post.content}></article>
  </div>
</BlogPostVue> -->

---
// import BlogPostVue from '@layouts/BlogPost.vue'
import BlogPost from "@layouts/BlogPost.astro";
import PostBlocks from "@components/PostBlocks.vue";
// import { Prism } from "@astrojs/prism";
import { getAllPostsWithSlugs, getPostBySlug } from "@lib/api";
// import "prismjs/themes/prism-tomorrow.css";

export async function getStaticPaths() {
  const postWithSlugsDe: any = await getAllPostsWithSlugs();
  const postWithSlugsEn: any = await getAllPostsWithSlugs("EN");

  const postWithSlugsAllLang = [
    ...postWithSlugsDe.edges,
    ...postWithSlugsEn.edges,
  ];

  return postWithSlugsAllLang.map(({ node }: any) => {
    return {
      params: {
        postSlug: node.slug,
        lang: node.language.slug,
      },
    };
  });
}

const { postSlug, lang }: any = Astro.params;
const post: any = await getPostBySlug(postSlug);
console.log(Astro.params);

const decode = (str) => {
  return str.replace(/&#(\d+);/g, function (match, dec) {
    return String.fromCharCode(dec);
  });
};

const exstractCode = (content: string) => {
  content = decode(content);
  const regex = /<pre .*><code>([\s\S]*?)<\/code><\/pre>/g;
  const matches = content.matchAll(regex);
  let codeBlocks = "";
  for (const match of matches) {
    codeBlocks += match[1];
  }
  return codeBlocks;
};

const findLanguage = (content: string) => {
  const regex = /lang-[a-z]+/gm;
  let match = content.match(regex);
  match = match.toString().replace("lang-", "");
  return match;
};

const headings = post.blocks.filter(
  (block: any) =>
    block.name === "core/heading" &&
    (JSON.parse(block.attributesJSON).level === 2 ||
      JSON.parse(block.attributesJSON).level === 3)
);
---

<BlogPost content={post} headings={headings}>
  <!-- <div set:html={post.content} class="c-blog__content" id="postContent" /> -->
  <PostBlocks blocks={post.blocks} />
</BlogPost>

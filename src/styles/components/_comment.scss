@use 'sass:math';
@use '@styles/mixins/mixins' as mx; // Needs to be loaded before the sass-butler mixins
@use '@styles/variables/colors';
@use '@styles/variables/base';
@use '@sass-butler/mixins' as butler-mx;
@use '@sass-butler/functions' as butler-fn;

$spacing: 121;

@mixin scaling-spacing-in-depth($startingDepth, $depth, $parity) {
	@for $i from $startingDepth through $depth {
		&.is-level-#{$i} {
			> .c-comment__item {
				@if $parity == 'even' {
					--spacing-outer: 0 #{math.div($i, 2) * $spacing + px};
				}
				@if $parity == 'odd' {
					--spacing-outer: 0 #{$spacing + px} 0 #{math.div($i, 1.5) * $spacing + px};
				}
			}
		}
	}
}

.c-comment {
	@include butler-mx.hover {
		.c-comment__content {
			--float-distance: -20px;

			&::before,
			&::after,
			& {
				transform: translateY(0);
				animation: float 5s ease-in-out infinite;
			}

			&::before {
				--float-distance: -15px;
			}

			&::after {
				--float-distance: -8px;
			}
		}
	}

	&__item {
		display: grid;
		grid-template-columns: var(--columns-grid-comment);
		grid-template-areas:
			'content'
			'header';
		gap: 15px;
	}

	@include mx.breakpoint('md') {
		grid-template-areas:
			' . content'
			'header . ';
	}

	&__header {
		padding: 10px;
		border-radius: base.$border-radius;
		background-color: var(--color-background-author-image, #{butler-fn.hex-to-rgb(colors.$white, 10%)});
		grid-area: header;
		align-self: center;
	}

	&__author-image {
		border-radius: base.$border-radius;
	}

	&__author-name-wrap {
		display: flex;
	}

	&__author-name {
		margin: 0;
		font-size: var(--font-size-xs);
	}

	&__date {
		font-size: var(--font-size-xs);
	}

	&__author-icon {
		display: flex;
		border: 1px solid var(--white);
		border-radius: base.$border-radius;
	}

	&__content {
		grid-area: content;
		padding: 10px;
		border-radius: base.$border-radius;
		background-color: butler-fn.hex-to-rgb(colors.$white, 90%);
		position: relative;
		color: var(--blue-dark);

		@include mx.breakpoint('md') {
			margin-bottom: -35px;
		}

		&::after,
		&::before {
			content: '';
			position: absolute;
			background-color: butler-fn.hex-to-rgb(colors.$white, 90%);
			border-radius: base.$border-radius;
			z-index: -1;
			height: 8px;
		}

		&::after {
			bottom: -18px;
			width: 80px;
		}

		&::before {
			bottom: -36px;
			width: 8px;
		}
	}

	&.is-odd,
	&.is-even {
		> .c-comment__item {
			margin: var(--spacing-outer);
		}
	}

	&.is-odd {
		> .c-comment__item {
			--columns-grid-comment: 1fr;

			grid-template-areas:
				'content'
				'header';

			@include mx.breakpoint('md') {
				--columns-grid-comment: 1fr 106px;

				grid-template-areas:
					'content .'
					' . header';
			}

			.c-comment__content {
				&::after,
				&::before {
					right: 0;
				}
			}
		}

		&.is-level-1 > .c-comment__item {
			--spacing-outer: 0 0 0 #{1 * $spacing + px};
		}

		@include scaling-spacing-in-depth(2, 5, 'odd');
	}

	&.is-even {
		> .c-comment__item {
			--columns-grid-comment: 1fr;

			grid-template-areas:
				'content'
				'header';
			gap: 15px;

			@include mx.breakpoint('md') {
				--columns-grid-comment: 106px 1fr;

				grid-template-areas:
					' . content'
					'header .';
			}

			.c-comment__content {
				&::after,
				&::before {
					left: 0;
				}
			}
		}

		@include scaling-spacing-in-depth(1, 5, 'even');
	}

	&.is-reply {
		margin-top: 15px;
	}

	&.is-author {
		.c-comment__header {
			--color-background-author-image: #{butler-fn.hex-to-rgb(colors.$red-light, 40%)};
		}
	}

	&__footer {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-top: 15px;
	}
}

@keyframes float {
	0% {
		transform: translateY(0);
	}

	50% {
		transform: translateY(var(--float-distance, -20px));
	}

	100% {
		transform: translateY(0);
	}
}

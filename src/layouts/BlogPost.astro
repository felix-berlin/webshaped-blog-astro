---
import "@styles/app.scss";
import "@styles/components/_blog.scss";
import "@styles/components/_blog-sidebar.scss";
import "@fontsource/source-sans-pro/400.css";
import "@fontsource/source-sans-pro/400-italic.css";
import "@fontsource/source-sans-pro/700.css";

import BaseHead from "@components/BaseHead.astro";
import MainHeader from "@components/hero/MainHeader.vue";
import DateModified from "@components/post/DateModified.vue";
import ReadingTime from "@components/post/ReadingTime.vue";
import Comments from "@components/comments/Comments.vue";
import CommentsClient from "@components/comments/CommentsClient.vue";
import CommentCount from "@components/comments/CommentCount.vue";
import Share from "@components/Share.vue";
import TableOfContents from "@components/post/TableOfContents.vue";
import TableOfContentsClientSide from "@components/post/TableOfContentsClientSide.vue";
import Helpful from "@components/Helpful.vue";
import Categories from "@components/Categories.vue";
import Author from "@components/post/Author.vue";
import MainFooter from "@components/footer/MainFooter.astro";
import Prism from "@components/post/Prism.vue";
import Webmentions from "@components/webmentions/Webmentions.vue";
import WebmentionsCount from "@components/webmentions/WebmentionsCount.vue";
import LoadWebmentions from "@components/webmentions/LoadWebmentions.vue";
// import Matomo from "@components/Matomo.vue";
import PostOlderThan from "@components/post/PostOlderThan.vue";
import { Breadcrumbs } from "astro-breadcrumbs";
import type { CoreHeadingBlock } from "../types/generated/graphql";

import { __ } from "@i18n/i18n";

import type { Seo, Title } from "@components/BaseHead.astro";
import type {
  RootQuery,
  Post,
  MediaDetails,
  MediaSize,
  Language,
} from "../types/generated/graphql";

import { getMenuById } from "@lib/api";

export interface BlogPost {
  content: Post;
  headings?: CoreHeadingBlock[];
}

const {
  content: {
    title,
    slug,
    dateGmt,
    modifiedGmt,
    featuredImage,
    seo,
    language,
    comments,
    commentCount,
    postId,
    id,
    content,
    categories,
    author,
  },
  headings,
} = Astro.props as BlogPost;

const langAttr = language?.locale?.replace("_", "-");

const { menuItems }: any = await getMenuById(2); // DE
// const { menuItemsEn }: any = await getMenuById(125); // EN

const breadcrumbItems = [
  {
    text: "Home",
    href: "/",
  },
  {
    text: language?.slug,
    href: `/${language?.slug}`,
  },
  {
    text: title,
    href: `/blog/${slug}`,
  },
];

const featuredImageSizes = featuredImage?.node?.mediaDetails
  ?.sizes as MediaSize[];
---

<html lang={langAttr}>
  <head>
    <BaseHead title={title} seo={seo} />
    <!-- LastFM API -->
    <link rel="preconnect" href="//last-fm.kasimir.dev" />
    <!-- Gravatar -->
    <link rel="preconnect" href="//secure.gravatar.com" />
    <!-- Preload featured image -->
    {
      featuredImageSizes &&
        featuredImageSizes.map((size: MediaSize) => (
          <link
            rel="preload"
            href={size.sourceUrl}
            as="image"
            type={size.mimeType}
            media={`(max-width: ${size.width}px)`}
          />
        ))
    }
    <link
      rel="preload"
      href={featuredImage?.node.mediaItemUrl}
      as="image"
      type={featuredImage?.node.mimeType}
      media={`(max-width: ${featuredImage?.node?.mediaDetails?.width}px)`}
    />
    <script src="../lib/smooth-scroll-anchor.ts"></script>
  </head>

  <body class="o-body">
    <MainHeader menuItems={menuItems} lang={language} client:load />
    <Prism client:load />

    <main class="o-content c-blog">
      <header class="c-blog__header">
        <Breadcrumbs crumbs={breadcrumbItems}>
          <span slot="index">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="20"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              ><path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"
              ></path><polyline points="9 22 9 12 15 12 15 22"></polyline></svg
            >
          </span>
          <span slot="separator" class="c-breadcrumbs__separator">/</span>
        </Breadcrumbs>
        <h1 class="c-blog__title">{title}</h1>
        <DateModified date={modifiedGmt || undefined} lang={language} />
        <ReadingTime time={seo?.readingTime || undefined} lang={language} />
        <WebmentionsCount
          elementIs={"a"}
          href={"#webmentions"}
          lang={language!}
          client:load
        />
        <Categories categories={categories!} />

        {
          featuredImage && (
            <img
              width={featuredImage?.node?.mediaDetails?.width}
              height={featuredImage?.node?.mediaDetails?.height}
              alt={featuredImage.node.altText}
              src={featuredImage.node.mediaItemUrl}
              srcset={featuredImage.node.srcSet}
              loading="eager"
              decoding="async"
              fetchpriority="high"
              class="c-blog__hero-image"
            />
          )
        }
      </header>
      <article class="c-blog__post">
        <!-- <header class="c-blog__post__hero-header">
          {featuredImage && (
            <img
              width={featuredImage.node.mediaDetails.width}
              height={featuredImage.node.mediaDetails.height}
              alt={featuredImage.node.altText}
              src={featuredImage.node.mediaItemUrl}
              srcset={featuredImage.node.srcSet}
              loading="eager"
              decoding="async"
              fetchpriority="high"
              class="c-blog__hero-image"
            />
          )} -->

        <!-- <Helpful client:load></Helpful> -->

        <!-- <CommentCount commentTotal={commentCount} isElement="a" href="#comments"></CommentCount> -->
        <!-- </header> -->
        <PostOlderThan
          date={modifiedGmt || ""}
          showAfterYears={4}
          lang={language!}
        />

        <slot />

        <footer>
          <Author
            author={author || undefined}
            lang={language!}
            client:visible
          />

          <!-- <LoadWebmentions client:only="vue"></LoadWebmentions> -->

          <!-- <Comments comments={comments} currentPostId={postId} id="comments" lang={language} authorId={author.node.id}></Comments> -->
          <CommentsClient
            currentPostId={postId}
            id="comments"
            lang={language!}
            authorId={author?.node.id}
            client:only="vue"
          />
        </footer>
      </article>

      <aside class="c-blog-sidebar">
        <h2 class="c-blog-sidebar__headline">
          {__(language?.locale!, "blog.table_of_contents")}
        </h2>
        <!-- <TableOfContentsClientSide target=".c-blog__content" client:only="vue" /> -->
        <TableOfContents headings={headings} client:load />

        <Share
          title={seo?.title!}
          text={seo?.opengraphDescription!}
          lang={language!}
          client:only="vue"
        />
      </aside>
    </main>
    <!-- {
      import.meta.env.ENABLE_ANALYTICS === "true" && (
        <Matomo
          client:only
          site-id={"3"}
          cookie-domain={"*.webshaped.de"}
          host={"analytics.webshaped.de"}
          debug-mode={true}
        />
      )
    } -->

    <MainFooter lang={language} />
    <style></style>
  </body>
</html>

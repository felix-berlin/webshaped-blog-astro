---
import '../styles/app.scss';
import '@fontsource/source-sans-pro/400.css';
import '@fontsource/source-sans-pro/700.css';

import BaseHead from "@components/BaseHead.astro";
import Header from '@components/hero/Header.vue';
import Date from '@components/Date.vue';
import ReadingTime from '@components/ReadingTime.vue';
import Comments from '@components/comments/Comments.vue';
import CommentCount from '@components/comments/CommentCount.vue';
import Share from '@components/Share.vue';
// import TableOfContents from '@components/TableOfContents.vue';
import TableOfContentsClientSide from '@components/TableOfContentsClientSide.vue';
import Helpful from '@components/Helpful.vue';
import Categories from '@components/Categories.vue';
import Author from '@components/Author.vue';
import Footer from '@components/Footer.astro';
import Prism from '@components/Prism.vue';
import Webmentions from '@components/webmentions/Webmentions.vue';
import WebmentionsCount from '@components/webmentions/WebmentionsCount.vue';

import type { AuthorData } from '@components/Author.vue';
import type { Seo, Title } from '@components/BaseHead.astro';

import { getMenuById } from '@lib/api';
export interface BlogPost {
	content: {
    title: Title;
    slug: string;
    seo: Seo;
    author: AuthorData;
		dateGmt: string;
		featuredImage: {
      node: {
        mediaItemUrl: string;
        altText: string;
        srcSet: string;
        sizes: string;
        mediaDetails: {
          width: number;
          height: number;
        },
      }
		};
		language: {
			code: string;
			locale: string;
			name: string;
      slug: string;
		},
		comments: object;
		commentCount: number;
		postId: number;
		content: string;
		categories: object;
	};
}

const {
	content: {
		title,
    slug,
		dateGmt,
		featuredImage,
		seo,
		language,
		comments,
		commentCount,
		postId,
		content,
		categories,
		author
	},
} = Astro.props as BlogPost;

const langAttr = language.locale.replace('_', '-');

const { menuItems }: any = await getMenuById(2); // DE
// const { menuItemsEn }: any = await getMenuById(125); // EN

// console.log(Astro.url.pathname, menuItemsEn, language);

---

<html lang={langAttr}>
	<head>
		<BaseHead title={title} seo={seo} />
    <!-- LastFM API -->
    <link rel="preconnect" href="//last-fm.kasimir.dev">
	</head>

	<body class="o-body">
		<Header menuItems={menuItems} client:load/>
		<article class="wrapper o-content" id="swup">
			<header>
				{featuredImage && (
					<img
						width={featuredImage.node.mediaDetails.width}
						height={featuredImage.node.mediaDetails.height}
						alt={featuredImage.node.altText}
						src={featuredImage.node.mediaItemUrl}
						srcset={featuredImage.node.srcSet}
						loading="eager"
            decoding="async"
            fetchpriority="high"
					/>
				)}
				<h1 class="title">{title}</h1>
				<Date date={dateGmt} lang={language} client:visible></Date>

        <!-- <Helpful client:load></Helpful> -->

				<CommentCount commentTotal={commentCount} isElement="a" href="#comments"></CommentCount>

        <WebmentionsCount client:load></WebmentionsCount>

				<Share title={seo.title} text={seo.opengraphDescription} client:visible></Share>

				<ReadingTime time={seo.readingTime} />

				<Categories categories={categories} client:visible></Categories>

				<Author author={author} client:visible></Author>

				<!-- <TableOfContents content={content}></TableOfContents> -->
        <TableOfContentsClientSide target=".o-article" client:load></TableOfContentsClientSide>

        <Prism client:load></Prism>
			</header>
			<main>
				<slot></slot>
			</main>
      <Webmentions target={import.meta.env.DEV ? `https://develop.webshaped-blog-astro.pages.dev/${language.slug}/${slug}/` : ''} currentUrl={import.meta.env.PROD} client:load></Webmentions>
		</article>
		<div>
			<Comments comments={comments} currentPostId={postId} client:load id="comments"></Comments>
		</div>
    <script>
      import '../lib/swup.js';
    </script>
    <Footer></Footer>
	</body>
</html>

<style>
</style>

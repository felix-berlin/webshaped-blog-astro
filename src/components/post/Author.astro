---
import "@styles/components/_author.scss";
import ScrobbleDisplay from "@components/ScrobbleDisplay.vue";
import SocialList from "@components/SocialList.vue";
import type {
  Language,
  NodeWithAuthorToUserConnectionEdge,
  Maybe,
} from "@ts_types/generated/graphql";
import { getSocialItems } from "@utils/helpers";

export interface AuthorProps {
  author: Maybe<NodeWithAuthorToUserConnectionEdge> | undefined;
  lang: Maybe<Language>;
}

const { author, lang } = Astro.props as AuthorProps;

const scrobbleApi = import.meta.env.PUBLIC_LAST_FM_SCROBBLER_API;

const iconStyles = {
  size: 20,
  strokeWidth: 1,
};

const additionalSoicalData = {
  mastodon: {
    rel: "me",
  },
  github: {
    rel: "me",
  },
};

const allSocials = {
  ...author?.node?.seo?.social,
  ...author?.node?.socialAdvanced,
};
---

<div
  class="c-author u-glas-background u-rounded"
  itemscope
  itemtype="http://schema.org/Person"
>
  <div class="c-author__image-wrap">
    {
      author?.node?.avatar?.url && (
        <img
          src={author.node.avatar.url}
          class="c-author__image"
          alt="`Foto des Author: ${author?.node.firstName} ${author?.node.lastName}`"
          width={author.node.avatar.width}
          height={author.node.avatar.height}
          loading="eager"
          itemprop="image"
          src="path/to/author/image.jpg"
        />
      )
    }

    <ScrobbleDisplay
      scrobbleApi={scrobbleApi}
      dropdownPlacement="left"
      idle-after-count={1}
      client:only="vue"
    />
  </div>

  <p class="c-author__name" itemprop="name">
    {`${author?.node.firstName} ${author?.node.lastName}`}
  </p>

  <p class="c-author__description" itemprop="description">
    {author?.node.description}
  </p>

  <details class="c-author__details-toggle">
    <summary>more</summary>
    <SocialList
      socialItems={getSocialItems(allSocials, iconStyles, additionalSoicalData)}
      lang={lang}
    />
  </details>
</div>

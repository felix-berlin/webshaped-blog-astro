---
import GreenHosted from "@components/footer/GreenHosted.vue";
import Menu from "@components/Menu.vue";
import SocialList from "@components/SocialList.vue";
import { cacheExchange, Client, fetchExchange } from "@urql/core";
import { getSocialIconData } from "@utils/helpers";
import "@styles/objects/_footer.scss";
import { categoryPathBuilder, useTranslations } from "@utils/i18n/utils";
import { WP_API } from "astro:env/client";
// import InstallApp from "@components/InstallApp.vue";
import Copyright from "~icons/lucide/copyright";
import GitCommit from "~icons/lucide/git-commit";

import {
  GetAllCategoriesDocument,
  GetAuthorDocument,
  GetMenuItemsDocument,
} from "@/gql/graphql.ts";

import { version } from "../../../package.json";

const client = new Client({
  exchanges: [cacheExchange, fetchExchange],
  fetchOptions: {
    headers: {
      "Content-Type": "application/json",
    },
  },
  url: WP_API,
});

const categoriesResponse = await client.query(GetAllCategoriesDocument, {}).toPromise();

const categories = categoriesResponse?.data?.categories;

const footerMenuItemsResponse = await client
  .query(GetMenuItemsDocument, { language: "DE", location: "SECONDARY_MENU" })
  .toPromise();

const footerMenuItems = footerMenuItemsResponse?.data?.menuItems;

const authorResponse = await client.query(GetAuthorDocument, {}).toPromise();

const author = authorResponse.data?.user;

interface MainFooterProps {
  lang: "de" | "en";
}

const { lang } = Astro.props as MainFooterProps;

const t = useTranslations(lang);
const iconStyles = {
  size: 40,
  strokeWidth: 1,
};

const additionalSoicalData = {
  github: {
    rel: "me",
  },
  mastodon: {
    rel: "me",
  },
};

const allSocials = {
  ...author?.seo?.social,
  ...author?.socialAdvanced,
};
---

<footer class="o-footer">
  <SocialList
    class:list={["o-footer__social-list", "is-footer"]}
    lang={lang}
    socialItems={getSocialIconData(allSocials, iconStyles, additionalSoicalData)}
  />

  <div class="o-footer__end">
    <div class="o-footer__logo">
      <img
        alt="Web Shaped Logo"
        decoding="async"
        height="103"
        loading="lazy"
        src="/assets/logo/web_shaped_logo_2023_whail_trans_white_outline_no-spacing.svg"
        width="150"
      />
    </div>

    <div class="o-footer__categories">
      <h3 class="o-footer__headline">
        {t("categories")}
      </h3>
      <menu class="c-menu c-menu--footer-two-columns u-list-reset">
        {
          categories &&
            categories.nodes
              .filter((category) => category.language?.slug === lang)
              .map((category) => (
                <li class="c-menu__item">
                  <a
                    class="c-menu__link"
                    href={categoryPathBuilder(category.slug, category.language?.slug)}
                  >
                    {category.name}
                  </a>
                </li>
              ))
        }
      </menu>
    </div>
    <div class="o-footer__other">
      <h3 class="o-footer__headline">
        {t("footer.headline.other")}
      </h3>
      <Menu class:list={"o-footer__menu c-menu--footer"} menuItems={footerMenuItems} />
    </div>
    <div class="o-footer__quote">
      <figure>
        <blockquote>
          „If debugging is the process of removing software bugs, then programming must be the
          process of putting them in.“
        </blockquote>
        <figcaption>
          —Edsger W. Dijkstra, <cite>(1930 – 2002)</cite>
        </figcaption>
      </figure>
    </div>
    <div class="o-footer__infos">
      <div class="o-footer__credits">
        <Copyright height="16" width="16" />
        <span>
          2015 - {t("footer.copyright.now")} Felix Scholze
        </span>
      </div>
      <a
        class="o-footer__version"
        href="https://github.com/felix-berlin/webshaped-blog-astro/releases"
        target="_blank"
        title="Github Releases Seite"
      >
        <GitCommit height="16" width="16" />
        <span>Website Version: {version}</span>
      </a>

      <GreenHosted lang={lang} />
      <!-- FIXME: PWA is not working (manifest is not found ect.) -->
      <!-- <InstallApp showIcon={true} client:only="vue" cssClass="c-button--like-link" /> -->
    </div>
  </div>
</footer>
